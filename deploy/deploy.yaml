apiVersion: v1
kind: ServiceAccount
metadata:
  name: cni-bridge
  namespace: default
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cni-bridge
rules:
  - apiGroups: ["*"]
    resources: ["nodes"]
    verbs: ["*"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cni-bridge
subjects:
  - kind: ServiceAccount
    name: cni-bridge
    namespace: default
roleRef:
  kind: ClusterRole
  name: cni-bridge
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: cni-bridge
  namespace: default
spec:
  selector:
    matchLabels:
      app: cni-bridge
  template:
    metadata:
      labels:
        app: cni-bridge
    spec:
      serviceAccount: cni-bridge
      containers:
      - name: kubenetd
        image: ccr.ccs.tencentyun.com/tencentyun/bridged:0.0.1
        command:
        - "/usr/bin/cni-bridge"
        args:
        - "--bridge-name=cbr0"
        - "--network-name=cni-bridge"
        - "--bridge-conf-path=/etc/cni/net.d/bridge.conf"
        - "--loopback-conf-path=/etc/cni/net.d/loopback.conf"
        securityContext:
          privileged: true
        env:
        - name: CURRENT_HOST_NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: cni
          mountPath: /etc/cni/net.d
        imagePullPolicy: Always
      - name: install-cni
        image: ccr.ccs.tencentyun.com/tencentyun/bridged:0.0.1
        command:
        - "/install-cni.sh"
        volumeMounts:
        - name: host-cni-bin
          mountPath: /host/opt/cni/bin/
        imagePullPolicy: Always
      hostNetwork: true
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      volumes:
        - name: host-cni-bin
          hostPath:
            path: /opt/cni/bin
        - name: cni
          hostPath:
            path: /etc/cni/net.d
